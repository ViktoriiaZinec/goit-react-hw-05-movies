{"version":3,"file":"static/js/176.bd6af1c2.chunk.js","mappings":"qPACA,GAAgB,mBAAqB,sCAAsC,kBAAoB,sC,SCIlFA,EAAY,WACvB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAE/B,GAA4BC,EAAAA,EAAAA,UAAQ,OAACF,QAAD,IAACA,EAAAA,EAAS,IAA9C,eAAOG,EAAP,KAAeC,EAAf,KAeA,OACE,iBAAKC,UAAWC,EAAAA,aAAhB,WACE,kBACEC,MAAOJ,EACPK,SAjBe,SAAAC,GACnB,IAAQF,EAAUE,EAAMC,OAAhBH,MACRH,EAAUG,EACX,EAeKI,KAAK,OACLN,UAAWC,EAAAA,kBACXM,YAAY,uBAEd,mBACEP,UAAWC,EAAAA,mBACXK,KAAK,SACLE,QApBe,WACnB,IAAKV,EAAOW,OACV,OAAOC,MAAM,oBAEfhB,EAAgB,CAAEC,MAAOG,IACzBC,EAAU,GACX,EAWG,sBASL,E,kBCpCKY,EACE,OADFA,EAEK,UAFLA,EAGK,UAHLA,EAIG,QAqCT,EAlCmB,WACjB,OAA4Bd,EAAAA,EAAAA,UAAS,IAArC,eAAOe,EAAP,KAAeC,EAAf,KACA,GAA4BhB,EAAAA,EAAAA,UAASc,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEjB,GAAuBzB,EAAAA,EAAAA,MACjBM,GADN,eAC4BF,IAAI,SAE1BsB,GAAcC,EAAAA,EAAAA,cAAW,iBAAC,uFACzBrB,EADyB,wDAE9BiB,EAAUJ,GAFoB,mBAIPS,EAAAA,EAAAA,IAAmBtB,GAJZ,OAItBc,EAJsB,OAK5BC,EAAUD,EAAOS,KAAKC,SACtBP,EAAUJ,GANkB,kDAQ5BI,EAAUJ,GARkB,0DAU7B,CAACb,IAMJ,OAJAyB,EAAAA,EAAAA,YAAU,WACRL,GACD,GAAE,CAACA,KAGF,4BACE,SAAC3B,EAAD,IACCuB,IAAWH,GAAuB,gBAClCG,IAAWH,GAAqB,iBAChCG,IAAWH,IAAuBa,EAAAA,EAAAA,GAAUZ,EAAQI,KAG1D,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Searching/Searching.module.css?9c78","components/Searching/Searching.jsx","components/pages/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"search_form_button\":\"Searching_search_form_button__yWFGp\",\"search_form_input\":\"Searching_search_form_input__eWk2F\"};","import { useState } from 'react';\n// import { getSearchingMovies } from 'service/video-servise';\nimport { useSearchParams } from 'react-router-dom';\nimport css from './Searching.module.css';\n\nexport const Searching = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const [search, setSearch] = useState(query ?? '');\n\n  const handleChange = event => {\n    const { value } = event.target;\n    setSearch(value);\n  };\n\n  const handleSubmit = () => {\n    if (!search.trim()) {\n      return alert('Please type text');\n    }\n    setSearchParams({ query: search });\n    setSearch('');\n  };\n\n  return (\n    <div className={css.form_control}>\n      <input\n        value={search}\n        onChange={handleChange}\n        type=\"text\"\n        className={css.search_form_input}\n        placeholder=\"Type to search...\"\n      />\n      <button\n        className={css.search_form_button}\n        type=\"submit\"\n        onClick={handleSubmit}\n      >\n        Search\n      </button>\n    </div>\n  );\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Searching } from 'components/Searching/Searching';\nimport { getSearchingMovies } from 'service/video-servise';\nimport { MovieList } from 'components/MovieList/MovieList';\n\nconst fetchStatus = {\n  Idle: 'idle',\n  Loading: 'loading',\n  Success: 'success',\n  Error: 'error',\n};\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(fetchStatus.Idle);\n  const location = useLocation();\n\n  const [searchParams] = useSearchParams();\n  const search = searchParams.get('query');\n\n  const fetchMovies = useCallback(async () => {\n    if (!search) return;\n    setStatus(fetchStatus.Loading);\n    try {\n      const movies = await getSearchingMovies(search);\n      setMovies(movies.data.results);\n      setStatus(fetchStatus.Success);\n    } catch (err) {\n      setStatus(fetchStatus.Error);\n    }\n  }, [search]);\n\n  useEffect(() => {\n    fetchMovies();\n  }, [fetchMovies]);\n\n  return (\n    <div>\n      <Searching />\n      {status === fetchStatus.Loading && 'Loading, wait'}\n      {status === fetchStatus.Error && 'Error fetching'}\n      {status === fetchStatus.Success && MovieList(movies, location)}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["Searching","useSearchParams","searchParams","setSearchParams","query","get","useState","search","setSearch","className","css","value","onChange","event","target","type","placeholder","onClick","trim","alert","fetchStatus","movies","setMovies","status","setStatus","location","useLocation","fetchMovies","useCallback","getSearchingMovies","data","results","useEffect","MovieList"],"sourceRoot":""}